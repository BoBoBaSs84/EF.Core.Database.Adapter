//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 649 // Disable "CS0649 Field is never assigned to, and will always have its default value null"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8600 // Disable "CS8600 Converting null literal or possible null value to non-nullable type"
#pragma warning disable 8602 // Disable "CS8602 Dereference of a possibly null reference"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"
#pragma warning disable 8604 // Disable "CS8604 Possible null reference argument for parameter"
#pragma warning disable 8625 // Disable "CS8625 Cannot convert null literal to non-nullable reference type"
#pragma warning disable 8765 // Disable "CS8765 Nullability of type of parameter doesn't match overridden member (possibly because of nullability attributes)."

namespace BB84.Home.Connector.Contracts
{
    using System = global::System;

    

    /// <summary>
    /// The request for creating a attendance.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record AttendanceCreateRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public AttendanceCreateRequest(System.TimeSpan? @breakTime, System.DateTimeOffset @date, System.TimeSpan? @endTime, System.TimeSpan? @startTime, AttendanceType @type)
        {
            this.Type = @type;
            this.StartTime = @startTime;
            this.EndTime = @endTime;
            this.BreakTime = @breakTime;
            this.Date = @date;
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public AttendanceType Type { get; init; }

        /// <summary>
        /// The start time of the attendance.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("startTime")]
        public System.TimeSpan? StartTime { get; init; }

        /// <summary>
        /// The end time of the attendance.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("endTime")]
        public System.TimeSpan? EndTime { get; init; }

        /// <summary>
        /// The break time of the attendance.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("breakTime")]
        public System.TimeSpan? BreakTime { get; init; }

        /// <summary>
        /// The date of the attendance.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("date")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date { get; init; }

    }

    /// <summary>
    /// The request for updating a attendance.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record AttendanceUpdateRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public AttendanceUpdateRequest(System.TimeSpan? @breakTime, System.TimeSpan? @endTime, System.Guid @id, System.TimeSpan? @startTime, AttendanceType @type)
        {
            this.Type = @type;
            this.StartTime = @startTime;
            this.EndTime = @endTime;
            this.BreakTime = @breakTime;
            this.Id = @id;
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public AttendanceType Type { get; init; }

        /// <summary>
        /// The start time of the attendance.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("startTime")]
        public System.TimeSpan? StartTime { get; init; }

        /// <summary>
        /// The end time of the attendance.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("endTime")]
        public System.TimeSpan? EndTime { get; init; }

        /// <summary>
        /// The break time of the attendance.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("breakTime")]
        public System.TimeSpan? BreakTime { get; init; }

        /// <summary>
        /// The unique identifier of the attendance.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; init; }

    }

    /// <summary>
    /// The request to creating a document.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record DocumentCreateRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public DocumentCreateRequest(byte[] @content, System.DateTimeOffset @creationTime, string @directory, string @extensionName, DocumentTypes @flags, System.DateTimeOffset? @lastAccessTime, System.DateTimeOffset? @lastWriteTime, string @name)
        {
            this.Name = @name;
            this.ExtensionName = @extensionName;
            this.Directory = @directory;
            this.Flags = @flags;
            this.CreationTime = @creationTime;
            this.LastWriteTime = @lastWriteTime;
            this.LastAccessTime = @lastAccessTime;
            this.Content = @content;
        }

        /// <summary>
        /// The name of the document without extension.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name { get; init; }

        /// <summary>
        /// The extension name of the document without the &lt;b&gt;dot&lt;/b&gt;.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("extensionName")]
        [System.ComponentModel.DataAnnotations.Required]
        public string ExtensionName { get; init; }

        /// <summary>
        /// The directory of the document.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("directory")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Directory { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("flags")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public DocumentTypes Flags { get; init; }

        /// <summary>
        /// The creation date of the document.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("creationTime")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset CreationTime { get; init; }

        /// <summary>
        /// The last modification date of the document.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastWriteTime")]
        public System.DateTimeOffset? LastWriteTime { get; init; }

        /// <summary>
        /// The last acces date of the document.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastAccessTime")]
        public System.DateTimeOffset? LastAccessTime { get; init; }

        /// <summary>
        /// The actual data of the document.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("content")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public byte[] Content { get; init; }

    }

    /// <summary>
    /// The request for updating a document.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record DocumentUpdateRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public DocumentUpdateRequest(byte[] @content, System.DateTimeOffset @creationTime, string @directory, string @extensionName, DocumentTypes @flags, System.Guid @id, System.DateTimeOffset? @lastAccessTime, System.DateTimeOffset? @lastWriteTime, string @name)
        {
            this.Name = @name;
            this.ExtensionName = @extensionName;
            this.Directory = @directory;
            this.Flags = @flags;
            this.CreationTime = @creationTime;
            this.LastWriteTime = @lastWriteTime;
            this.LastAccessTime = @lastAccessTime;
            this.Content = @content;
            this.Id = @id;
        }

        /// <summary>
        /// The name of the document without extension.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name { get; init; }

        /// <summary>
        /// The extension name of the document without the &lt;b&gt;dot&lt;/b&gt;.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("extensionName")]
        [System.ComponentModel.DataAnnotations.Required]
        public string ExtensionName { get; init; }

        /// <summary>
        /// The directory of the document.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("directory")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Directory { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("flags")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public DocumentTypes Flags { get; init; }

        /// <summary>
        /// The creation date of the document.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("creationTime")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset CreationTime { get; init; }

        /// <summary>
        /// The last modification date of the document.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastWriteTime")]
        public System.DateTimeOffset? LastWriteTime { get; init; }

        /// <summary>
        /// The last acces date of the document.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastAccessTime")]
        public System.DateTimeOffset? LastAccessTime { get; init; }

        /// <summary>
        /// The actual data of the document.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("content")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public byte[] Content { get; init; }

        /// <summary>
        /// The unique identifier of the document.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; init; }

    }

    /// <summary>
    /// The request for creating a bank account.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record AccountCreateRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public AccountCreateRequest(System.Collections.Generic.ICollection<CardCreateRequest> @cards, string @iban, string @provider, AccountType @type)
        {
            this.Type = @type;
            this.Provider = @provider;
            this.Iban = @iban;
            this.Cards = @cards;
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public AccountType Type { get; init; }

        /// <summary>
        /// The account provider.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("provider")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(500, MinimumLength = 1)]
        public string Provider { get; init; }

        /// <summary>
        /// The international bank account number.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("iban")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Iban { get; init; }

        /// <summary>
        /// The cards belonging to this account.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("cards")]
        public System.Collections.Generic.ICollection<CardCreateRequest> Cards { get; init; }

    }

    /// <summary>
    /// The request for updating a bank account.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record AccountUpdateRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public AccountUpdateRequest(string @provider, AccountType @type)
        {
            this.Type = @type;
            this.Provider = @provider;
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public AccountType Type { get; init; }

        /// <summary>
        /// The account provider.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("provider")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(500, MinimumLength = 1)]
        public string Provider { get; init; }

    }

    /// <summary>
    /// The request for creating a bank card.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record CardCreateRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public CardCreateRequest(string @pan, CardType @type, System.DateTimeOffset @validUntil)
        {
            this.Type = @type;
            this.ValidUntil = @validUntil;
            this.Pan = @pan;
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CardType Type { get; init; }

        /// <summary>
        /// The valid until property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("validUntil")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset ValidUntil { get; init; }

        /// <summary>
        /// The permanent account number.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("pan")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Pan { get; init; }

    }

    /// <summary>
    /// The request for updating a bank card.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record CardUpdateRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public CardUpdateRequest(CardType @type, System.DateTimeOffset @validUntil)
        {
            this.Type = @type;
            this.ValidUntil = @validUntil;
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CardType Type { get; init; }

        /// <summary>
        /// The valid until property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("validUntil")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset ValidUntil { get; init; }

    }

    /// <summary>
    /// The request for creating a bank transaction.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record TransactionCreateRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public TransactionCreateRequest(string @accountNumber, double @amountEur, string @bankCode, System.DateTimeOffset @bookingDate, string @clientBeneficiary, string @creditorId, string @customerReference, string @mandateReference, string @postingText, string @purpose, System.DateTimeOffset? @valueDate)
        {
            this.BookingDate = @bookingDate;
            this.ValueDate = @valueDate;
            this.PostingText = @postingText;
            this.ClientBeneficiary = @clientBeneficiary;
            this.Purpose = @purpose;
            this.AccountNumber = @accountNumber;
            this.BankCode = @bankCode;
            this.AmountEur = @amountEur;
            this.CreditorId = @creditorId;
            this.MandateReference = @mandateReference;
            this.CustomerReference = @customerReference;
        }

        /// <summary>
        /// The booking date of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("bookingDate")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset BookingDate { get; init; }

        /// <summary>
        /// The value date of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("valueDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? ValueDate { get; init; }

        /// <summary>
        /// The posting text of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("postingText")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength = 1)]
        public string PostingText { get; init; }

        /// <summary>
        /// The client beneficiary of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("clientBeneficiary")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(250, MinimumLength = 1)]
        public string ClientBeneficiary { get; init; }

        /// <summary>
        /// The purpose of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("purpose")]
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public string Purpose { get; init; }

        /// <summary>
        /// The bank account number of the transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountNumber")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(25, MinimumLength = 1)]
        public string AccountNumber { get; init; }

        /// <summary>
        /// The bank code of the transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankCode")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(25, MinimumLength = 1)]
        public string BankCode { get; init; }

        /// <summary>
        /// The amount in EUR of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("amountEur")]
        public double AmountEur { get; init; }

        /// <summary>
        /// The creditor identifier of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditorId")]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string CreditorId { get; init; }

        /// <summary>
        /// The mandate reference of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("mandateReference")]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string MandateReference { get; init; }

        /// <summary>
        /// The customer reference of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerReference")]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string CustomerReference { get; init; }

    }

    /// <summary>
    /// The request for updating a bank transaction.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record TransactionUpdateRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public TransactionUpdateRequest(string @accountNumber, double @amountEur, string @bankCode, System.DateTimeOffset @bookingDate, string @clientBeneficiary, string @creditorId, string @customerReference, string @mandateReference, string @postingText, string @purpose, System.DateTimeOffset? @valueDate)
        {
            this.BookingDate = @bookingDate;
            this.ValueDate = @valueDate;
            this.PostingText = @postingText;
            this.ClientBeneficiary = @clientBeneficiary;
            this.Purpose = @purpose;
            this.AccountNumber = @accountNumber;
            this.BankCode = @bankCode;
            this.AmountEur = @amountEur;
            this.CreditorId = @creditorId;
            this.MandateReference = @mandateReference;
            this.CustomerReference = @customerReference;
        }

        /// <summary>
        /// The booking date of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("bookingDate")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset BookingDate { get; init; }

        /// <summary>
        /// The value date of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("valueDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? ValueDate { get; init; }

        /// <summary>
        /// The posting text of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("postingText")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength = 1)]
        public string PostingText { get; init; }

        /// <summary>
        /// The client beneficiary of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("clientBeneficiary")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(250, MinimumLength = 1)]
        public string ClientBeneficiary { get; init; }

        /// <summary>
        /// The purpose of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("purpose")]
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public string Purpose { get; init; }

        /// <summary>
        /// The bank account number of the transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountNumber")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(25, MinimumLength = 1)]
        public string AccountNumber { get; init; }

        /// <summary>
        /// The bank code of the transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankCode")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(25, MinimumLength = 1)]
        public string BankCode { get; init; }

        /// <summary>
        /// The amount in EUR of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("amountEur")]
        public double AmountEur { get; init; }

        /// <summary>
        /// The creditor identifier of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditorId")]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string CreditorId { get; init; }

        /// <summary>
        /// The mandate reference of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("mandateReference")]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string MandateReference { get; init; }

        /// <summary>
        /// The customer reference of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerReference")]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string CustomerReference { get; init; }

    }

    /// <summary>
    /// The attendance preferences request class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record AttendancePreferencesRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public AttendancePreferencesRequest(int @vacationDays, WorkDayTypes @workDays, float @workHours)
        {
            this.WorkDays = @workDays;
            this.WorkHours = @workHours;
            this.VacationDays = @vacationDays;
        }

        [System.Text.Json.Serialization.JsonPropertyName("workDays")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public WorkDayTypes WorkDays { get; init; }

        /// <summary>
        /// The work hours per week property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("workHours")]
        [System.ComponentModel.DataAnnotations.Range(0F, 168F)]
        public float WorkHours { get; init; }

        /// <summary>
        /// The vacation days per year.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("vacationDays")]
        [System.ComponentModel.DataAnnotations.Range(0, 365)]
        public int VacationDays { get; init; }

    }

    /// <summary>
    /// The authentication request class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record AuthenticationRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public AuthenticationRequest(string @password, string @userName)
        {
            this.UserName = @userName;
            this.Password = @password;
        }

        /// <summary>
        /// The user name of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("userName")]
        [System.ComponentModel.DataAnnotations.Required]
        public string UserName { get; init; }

        /// <summary>
        /// The password of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("password")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Password { get; init; }

    }

    /// <summary>
    /// The preferences request class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record PreferencesRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public PreferencesRequest(AttendancePreferencesRequest @attendancePreferences)
        {
            this.AttendancePreferences = @attendancePreferences;
        }

        [System.Text.Json.Serialization.JsonPropertyName("attendancePreferences")]
        public AttendancePreferencesRequest AttendancePreferences { get; init; }

    }

    /// <summary>
    /// The token request class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record TokenRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public TokenRequest(string @accessToken, string @refreshToken)
        {
            this.AccessToken = @accessToken;
            this.RefreshToken = @refreshToken;
        }

        /// <summary>
        /// The application user access token.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("accessToken")]
        [System.ComponentModel.DataAnnotations.Required]
        public string AccessToken { get; init; }

        /// <summary>
        /// The application user refresh token.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("refreshToken")]
        [System.ComponentModel.DataAnnotations.Required]
        public string RefreshToken { get; init; }

    }

    /// <summary>
    /// The user create request class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record UserCreateRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public UserCreateRequest(string @email, string @firstName, string @lastName, string @password, string @userName)
        {
            this.FirstName = @firstName;
            this.LastName = @lastName;
            this.Email = @email;
            this.UserName = @userName;
            this.Password = @password;
        }

        /// <summary>
        /// The first name of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("firstName")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength = 1)]
        public string FirstName { get; init; }

        /// <summary>
        /// The last name of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastName")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength = 1)]
        public string LastName { get; init; }

        /// <summary>
        /// The email of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("email")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Email { get; init; }

        /// <summary>
        /// The user name of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("userName")]
        [System.ComponentModel.DataAnnotations.Required]
        public string UserName { get; init; }

        /// <summary>
        /// The password of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("password")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Password { get; init; }

    }

    /// <summary>
    /// The user update request class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record UserUpdateRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public UserUpdateRequest(System.DateTimeOffset? @dateOfBirth, string @email, string @firstName, string @lastName, string @middleName, string @phoneNumber, byte[] @picture, PreferencesRequest @preferences)
        {
            this.FirstName = @firstName;
            this.LastName = @lastName;
            this.Email = @email;
            this.MiddleName = @middleName;
            this.DateOfBirth = @dateOfBirth;
            this.PhoneNumber = @phoneNumber;
            this.Picture = @picture;
            this.Preferences = @preferences;
        }

        /// <summary>
        /// The first name of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("firstName")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength = 1)]
        public string FirstName { get; init; }

        /// <summary>
        /// The last name of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastName")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(100, MinimumLength = 1)]
        public string LastName { get; init; }

        /// <summary>
        /// The email of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("email")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Email { get; init; }

        /// <summary>
        /// The middle name of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("middleName")]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string MiddleName { get; init; }

        /// <summary>
        /// The date of birth of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("dateOfBirth")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? DateOfBirth { get; init; }

        /// <summary>
        /// The phone number of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("phoneNumber")]
        public string PhoneNumber { get; init; }

        /// <summary>
        /// The picture of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("picture")]
        public byte[] Picture { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("preferences")]
        public PreferencesRequest Preferences { get; init; }

    }

    /// <summary>
    /// The request class for creating a new todo item.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record ItemCreateRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public ItemCreateRequest(string @note, PriorityLevelType @priority, System.DateTimeOffset? @reminder, string @title)
        {
            this.Title = @title;
            this.Note = @note;
            this.Priority = @priority;
            this.Reminder = @reminder;
        }

        /// <summary>
        /// The title of the new todo item.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("title")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength = 1)]
        public string Title { get; init; }

        /// <summary>
        /// The note on the new todo item.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("note")]
        [System.ComponentModel.DataAnnotations.StringLength(2048)]
        public string Note { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("priority")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public PriorityLevelType Priority { get; init; }

        /// <summary>
        /// The reminder date for the new todo item.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("reminder")]
        public System.DateTimeOffset? Reminder { get; init; }

    }

    /// <summary>
    /// The request class to update an existing todo item.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record ItemUpdateRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public ItemUpdateRequest(bool @done, string @note, PriorityLevelType @priority, System.DateTimeOffset? @reminder, string @title)
        {
            this.Title = @title;
            this.Note = @note;
            this.Priority = @priority;
            this.Reminder = @reminder;
            this.Done = @done;
        }

        /// <summary>
        /// The title of the new todo item.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("title")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength = 1)]
        public string Title { get; init; }

        /// <summary>
        /// The note on the new todo item.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("note")]
        [System.ComponentModel.DataAnnotations.StringLength(2048)]
        public string Note { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("priority")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public PriorityLevelType Priority { get; init; }

        /// <summary>
        /// The reminder date for the new todo item.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("reminder")]
        public System.DateTimeOffset? Reminder { get; init; }

        /// <summary>
        /// Indicates if the todo item is done.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("done")]
        public bool Done { get; init; }

    }

    /// <summary>
    /// The request class for creating a new todo list.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record ListCreateRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public ListCreateRequest(string @color, string @title)
        {
            this.Title = @title;
            this.Color = @color;
        }

        /// <summary>
        /// The title of the todo list.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("title")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength = 1)]
        public string Title { get; init; }

        /// <summary>
        /// The color of the todo list.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("color")]
        [System.ComponentModel.DataAnnotations.StringLength(7)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^#[a-fA-F0-9]{6}$")]
        public string Color { get; init; }

    }

    /// <summary>
    /// The request class to update an existing todo list.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record ListUpdateRequest
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public ListUpdateRequest(string @color, string @title)
        {
            this.Title = @title;
            this.Color = @color;
        }

        /// <summary>
        /// The title of the todo list.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("title")]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.StringLength(256, MinimumLength = 1)]
        public string Title { get; init; }

        /// <summary>
        /// The color of the todo list.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("color")]
        [System.ComponentModel.DataAnnotations.StringLength(7)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^#[a-fA-F0-9]{6}$")]
        public string Color { get; init; }

    }

    /// <summary>
    /// The attendance response class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record AttendanceResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public AttendanceResponse(System.TimeSpan? @breakTime, System.DateTimeOffset @date, System.TimeSpan? @endTime, System.Guid @id, System.TimeSpan? @startTime, AttendanceType @type, float? @workingHours)
        {
            this.Id = @id;
            this.Date = @date;
            this.Type = @type;
            this.StartTime = @startTime;
            this.EndTime = @endTime;
            this.BreakTime = @breakTime;
            this.WorkingHours = @workingHours;
        }

        /// <summary>
        /// The globally unique identifier property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; init; }

        /// <summary>
        /// The date property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("date")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public AttendanceType Type { get; init; }

        /// <summary>
        /// The start time property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("startTime")]
        public System.TimeSpan? StartTime { get; init; }

        /// <summary>
        /// The end time property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("endTime")]
        public System.TimeSpan? EndTime { get; init; }

        /// <summary>
        /// The break time property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("breakTime")]
        public System.TimeSpan? BreakTime { get; init; }

        /// <summary>
        /// The resulting working hours property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("workingHours")]
        public float? WorkingHours { get; init; }

    }

    /// <summary>
    /// The attendance type response.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record AttendanceTypeResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public AttendanceTypeResponse(string @description, string @name, string @shortName, AttendanceType @value)
        {
            this.Value = @value;
            this.Name = @name;
            this.ShortName = @shortName;
            this.Description = @description;
        }

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public AttendanceType Value { get; init; }

        /// <summary>
        /// The name of the enumerator.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; init; }

        /// <summary>
        /// The short name of the enumerator.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("shortName")]
        public string ShortName { get; init; }

        /// <summary>
        /// The description of the enumerator.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string Description { get; init; }

    }

    /// <summary>
    /// The calendar response class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record CalendarResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public CalendarResponse(System.DateTimeOffset @date, int @dayOfWeek, int @dayOfYear, System.DateTimeOffset @endOfMonth, System.DateTimeOffset @endOfWeek, int @month, System.DateTimeOffset @startOfMonth, System.DateTimeOffset @startOfWeek, int @week, int @year)
        {
            this.Date = @date;
            this.Year = @year;
            this.Month = @month;
            this.Week = @week;
            this.DayOfWeek = @dayOfWeek;
            this.DayOfYear = @dayOfYear;
            this.StartOfWeek = @startOfWeek;
            this.EndOfWeek = @endOfWeek;
            this.StartOfMonth = @startOfMonth;
            this.EndOfMonth = @endOfMonth;
        }

        /// <summary>
        /// The date property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("date")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date { get; init; }

        /// <summary>
        /// The year property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("year")]
        public int Year { get; init; }

        /// <summary>
        /// The month property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("month")]
        public int Month { get; init; }

        /// <summary>
        /// The week property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("week")]
        public int Week { get; init; }

        /// <summary>
        /// The day of week property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("dayOfWeek")]
        public int DayOfWeek { get; init; }

        /// <summary>
        /// The day of year property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("dayOfYear")]
        public int DayOfYear { get; init; }

        /// <summary>
        /// The start of week property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("startOfWeek")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset StartOfWeek { get; init; }

        /// <summary>
        /// The end of Week property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("endOfWeek")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset EndOfWeek { get; init; }

        /// <summary>
        /// The start of month property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("startOfMonth")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset StartOfMonth { get; init; }

        /// <summary>
        /// The end of month property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("endOfMonth")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset EndOfMonth { get; init; }

    }

    /// <summary>
    /// The bank card type response.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record CardTypeResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public CardTypeResponse(string @description, string @name, string @shortName, CardType @value)
        {
            this.Value = @value;
            this.Name = @name;
            this.ShortName = @shortName;
            this.Description = @description;
        }

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CardType Value { get; init; }

        /// <summary>
        /// The name of the enumerator.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; init; }

        /// <summary>
        /// The short name of the enumerator.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("shortName")]
        public string ShortName { get; init; }

        /// <summary>
        /// The description of the enumerator.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string Description { get; init; }

    }

    /// <summary>
    /// The document types response.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record DocumentTypeResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public DocumentTypeResponse(string @description, string @name, string @shortName, DocumentTypes @value)
        {
            this.Value = @value;
            this.Name = @name;
            this.ShortName = @shortName;
            this.Description = @description;
        }

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public DocumentTypes Value { get; init; }

        /// <summary>
        /// The name of the enumerator.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; init; }

        /// <summary>
        /// The short name of the enumerator.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("shortName")]
        public string ShortName { get; init; }

        /// <summary>
        /// The description of the enumerator.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string Description { get; init; }

    }

    /// <summary>
    /// The user role type response.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record RoleTypeResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public RoleTypeResponse(string @description, string @name, string @shortName, RoleType @value)
        {
            this.Value = @value;
            this.Name = @name;
            this.ShortName = @shortName;
            this.Description = @description;
        }

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public RoleType Value { get; init; }

        /// <summary>
        /// The name of the enumerator.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; init; }

        /// <summary>
        /// The short name of the enumerator.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("shortName")]
        public string ShortName { get; init; }

        /// <summary>
        /// The description of the enumerator.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string Description { get; init; }

    }

    /// <summary>
    /// The work day types response.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record WorkDayTypeResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public WorkDayTypeResponse(string @description, string @name, string @shortName, WorkDayTypes @value)
        {
            this.Value = @value;
            this.Name = @name;
            this.ShortName = @shortName;
            this.Description = @description;
        }

        [System.Text.Json.Serialization.JsonPropertyName("value")]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public WorkDayTypes Value { get; init; }

        /// <summary>
        /// The name of the enumerator.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        public string Name { get; init; }

        /// <summary>
        /// The short name of the enumerator.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("shortName")]
        public string ShortName { get; init; }

        /// <summary>
        /// The description of the enumerator.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("description")]
        public string Description { get; init; }

    }

    /// <summary>
    /// The response for the document.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record DocumentResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public DocumentResponse(byte[] @content, System.DateTimeOffset @creationTime, string @directory, string @extensionName, DocumentTypes @flags, System.Guid @id, System.DateTimeOffset? @lastAccessTime, System.DateTimeOffset? @lastWriteTime, long? @length, byte[] @mD5Hash, string @mimeType, string @name)
        {
            this.Id = @id;
            this.Name = @name;
            this.Directory = @directory;
            this.Flags = @flags;
            this.CreationTime = @creationTime;
            this.LastWriteTime = @lastWriteTime;
            this.LastAccessTime = @lastAccessTime;
            this.MD5Hash = @mD5Hash;
            this.Length = @length;
            this.Content = @content;
            this.ExtensionName = @extensionName;
            this.MimeType = @mimeType;
        }

        /// <summary>
        /// The globally unique identifier property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; init; }

        /// <summary>
        /// The name of the document.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("name")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Name { get; init; }

        /// <summary>
        /// The directory of the document.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("directory")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Directory { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("flags")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public DocumentTypes Flags { get; init; }

        /// <summary>
        /// The creation date of the document.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("creationTime")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset CreationTime { get; init; }

        /// <summary>
        /// The last modification date of the document.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastWriteTime")]
        public System.DateTimeOffset? LastWriteTime { get; init; }

        /// <summary>
        /// The last acces date of the document.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastAccessTime")]
        public System.DateTimeOffset? LastAccessTime { get; init; }

        /// <summary>
        /// The &lt;b&gt;Message-Digest Algorithm 5&lt;/b&gt; of the data.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("mD5Hash")]
        public byte[] MD5Hash { get; init; }

        /// <summary>
        /// The length of the data content.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("length")]
        public long? Length { get; init; }

        /// <summary>
        /// The actual content of the data.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("content")]
        public byte[] Content { get; init; }

        /// <summary>
        /// The name of the document extension.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("extensionName")]
        public string ExtensionName { get; init; }

        /// <summary>
        /// The mime type of the document extenion.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("mimeType")]
        public string MimeType { get; init; }

    }

    /// <summary>
    /// The account response class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record AccountResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public AccountResponse(System.Collections.Generic.ICollection<CardResponse> @cards, string @iban, System.Guid @id, string @provider, AccountType @type)
        {
            this.Id = @id;
            this.Iban = @iban;
            this.Type = @type;
            this.Provider = @provider;
            this.Cards = @cards;
        }

        /// <summary>
        /// The globally unique identifier property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; init; }

        /// <summary>
        /// The international bank account number.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("iban")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Iban { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public AccountType Type { get; init; }

        /// <summary>
        /// The account provider.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("provider")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Provider { get; init; }

        /// <summary>
        /// The cards belonging to this account.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("cards")]
        public System.Collections.Generic.ICollection<CardResponse> Cards { get; init; }

    }

    /// <summary>
    /// The bank card response class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record CardResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public CardResponse(System.Guid @id, string @pan, CardType @type, System.DateTimeOffset @validUntil)
        {
            this.Id = @id;
            this.Pan = @pan;
            this.Type = @type;
            this.ValidUntil = @validUntil;
        }

        /// <summary>
        /// The globally unique identifier property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; init; }

        /// <summary>
        /// The payment card number.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("pan")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Pan { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public CardType Type { get; init; }

        /// <summary>
        /// The valid until property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("validUntil")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset ValidUntil { get; init; }

    }

    /// <summary>
    /// The bank transaction response class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record TransactionResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public TransactionResponse(string @accountNumber, double @amountEur, string @bankCode, System.DateTimeOffset @bookingDate, string @clientBeneficiary, string @creditorId, string @customerReference, System.Guid @id, string @mandateReference, string @postingText, string @purpose, System.DateTimeOffset? @valueDate)
        {
            this.Id = @id;
            this.BookingDate = @bookingDate;
            this.ValueDate = @valueDate;
            this.PostingText = @postingText;
            this.ClientBeneficiary = @clientBeneficiary;
            this.Purpose = @purpose;
            this.AccountNumber = @accountNumber;
            this.BankCode = @bankCode;
            this.AmountEur = @amountEur;
            this.CreditorId = @creditorId;
            this.MandateReference = @mandateReference;
            this.CustomerReference = @customerReference;
        }

        /// <summary>
        /// The globally unique identifier property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; init; }

        /// <summary>
        /// The booking date of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("bookingDate")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset BookingDate { get; init; }

        /// <summary>
        /// The value date of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("valueDate")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? ValueDate { get; init; }

        /// <summary>
        /// The posting text of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("postingText")]
        [System.ComponentModel.DataAnnotations.Required]
        public string PostingText { get; init; }

        /// <summary>
        /// The client beneficiary of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("clientBeneficiary")]
        [System.ComponentModel.DataAnnotations.Required]
        public string ClientBeneficiary { get; init; }

        /// <summary>
        /// The purpose of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("purpose")]
        public string Purpose { get; init; }

        /// <summary>
        /// The bank account number of the transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("accountNumber")]
        [System.ComponentModel.DataAnnotations.Required]
        public string AccountNumber { get; init; }

        /// <summary>
        /// The bank code of the transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("bankCode")]
        [System.ComponentModel.DataAnnotations.Required]
        public string BankCode { get; init; }

        /// <summary>
        /// The amount in EUR of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("amountEur")]
        public double AmountEur { get; init; }

        /// <summary>
        /// The creditor identifier of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("creditorId")]
        public string CreditorId { get; init; }

        /// <summary>
        /// The mandate reference of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("mandateReference")]
        public string MandateReference { get; init; }

        /// <summary>
        /// The customer reference of the bank transaction.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("customerReference")]
        public string CustomerReference { get; init; }

    }

    /// <summary>
    /// The attendance preferences response class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record AttendancePreferencesResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public AttendancePreferencesResponse(int @vacationDays, WorkDayTypes @workDays, float @workHours)
        {
            this.WorkDays = @workDays;
            this.WorkHours = @workHours;
            this.VacationDays = @vacationDays;
        }

        [System.Text.Json.Serialization.JsonPropertyName("workDays")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public WorkDayTypes WorkDays { get; init; }

        /// <summary>
        /// The work hours per week property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("workHours")]
        public float WorkHours { get; init; }

        /// <summary>
        /// The vacation days per year.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("vacationDays")]
        public int VacationDays { get; init; }

    }

    /// <summary>
    /// The authentication response class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record AuthenticationResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public AuthenticationResponse(string @accessToken, System.DateTimeOffset @accessTokenExpiration, string @refreshToken)
        {
            this.AccessToken = @accessToken;
            this.RefreshToken = @refreshToken;
            this.AccessTokenExpiration = @accessTokenExpiration;
        }

        /// <summary>
        /// The application user access token.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("accessToken")]
        [System.ComponentModel.DataAnnotations.Required]
        public string AccessToken { get; init; }

        /// <summary>
        /// The application user refresh token.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("refreshToken")]
        [System.ComponentModel.DataAnnotations.Required]
        public string RefreshToken { get; init; }

        /// <summary>
        /// The application user access token expiration date.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("accessTokenExpiration")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset AccessTokenExpiration { get; init; }

    }

    /// <summary>
    /// The preferences response class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record PreferencesResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public PreferencesResponse(AttendancePreferencesResponse @attendancePreferences)
        {
            this.AttendancePreferences = @attendancePreferences;
        }

        [System.Text.Json.Serialization.JsonPropertyName("attendancePreferences")]
        public AttendancePreferencesResponse AttendancePreferences { get; init; }

    }

    /// <summary>
    /// The user response class.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record UserResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public UserResponse(System.DateTimeOffset? @dateOfBirth, string @email, string @firstName, System.Guid @id, string @lastName, string @middleName, string @phoneNumber, string @picture, PreferencesResponse @preferences, string @userName)
        {
            this.Id = @id;
            this.FirstName = @firstName;
            this.MiddleName = @middleName;
            this.LastName = @lastName;
            this.DateOfBirth = @dateOfBirth;
            this.UserName = @userName;
            this.Email = @email;
            this.PhoneNumber = @phoneNumber;
            this.Picture = @picture;
            this.Preferences = @preferences;
        }

        /// <summary>
        /// The globally unique identifier property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; init; }

        /// <summary>
        /// The first name of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("firstName")]
        [System.ComponentModel.DataAnnotations.Required]
        public string FirstName { get; init; }

        /// <summary>
        /// The middle name of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("middleName")]
        public string MiddleName { get; init; }

        /// <summary>
        /// The last name of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("lastName")]
        [System.ComponentModel.DataAnnotations.Required]
        public string LastName { get; init; }

        /// <summary>
        /// The date of birth of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("dateOfBirth")]
        [System.Text.Json.Serialization.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset? DateOfBirth { get; init; }

        /// <summary>
        /// The user name of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("userName")]
        [System.ComponentModel.DataAnnotations.Required]
        public string UserName { get; init; }

        /// <summary>
        /// The email of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("email")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Email { get; init; }

        /// <summary>
        /// The phone number of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("phoneNumber")]
        public string PhoneNumber { get; init; }

        /// <summary>
        /// The picture of the user.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("picture")]
        public string Picture { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("preferences")]
        public PreferencesResponse Preferences { get; init; }

    }

    /// <summary>
    /// The response for the todo item.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record ItemResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public ItemResponse(bool @done, System.Guid @id, string @note, PriorityLevelType @priority, System.DateTimeOffset? @reminder, string @title)
        {
            this.Id = @id;
            this.Title = @title;
            this.Note = @note;
            this.Priority = @priority;
            this.Reminder = @reminder;
            this.Done = @done;
        }

        /// <summary>
        /// The globally unique identifier property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; init; }

        /// <summary>
        /// The title of the todo item.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("title")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Title { get; init; }

        /// <summary>
        /// The note on the todo item.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("note")]
        public string Note { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("priority")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public PriorityLevelType Priority { get; init; }

        /// <summary>
        /// The remind date of the todo item.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("reminder")]
        public System.DateTimeOffset? Reminder { get; init; }

        /// <summary>
        /// Indicates if the todo item is done.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("done")]
        public bool Done { get; init; }

    }

    /// <summary>
    /// The response for the todo list.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record ListResponse
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public ListResponse(string @color, System.Guid @id, System.Collections.Generic.ICollection<ItemResponse> @items, string @title)
        {
            this.Id = @id;
            this.Title = @title;
            this.Color = @color;
            this.Items = @items;
        }

        /// <summary>
        /// The globally unique identifier property.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("id")]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; init; }

        /// <summary>
        /// The title of the todo list.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("title")]
        [System.ComponentModel.DataAnnotations.Required]
        public string Title { get; init; }

        /// <summary>
        /// The color of the todo list.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("color")]
        public string Color { get; init; }

        /// <summary>
        /// The items within the todo list.
        /// </summary>
        [System.Text.Json.Serialization.JsonPropertyName("items")]
        public System.Collections.Generic.ICollection<ItemResponse> Items { get; init; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AttendanceType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Holiday")]
        Holiday = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Workday")]
        Workday = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Absence")]
        Absence = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"BuisnessTrip")]
        BuisnessTrip = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"Suspension")]
        Suspension = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"MobileWorking")]
        MobileWorking = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"PlannedVacation")]
        PlannedVacation = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"ShortTimeWork")]
        ShortTimeWork = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"Sickness")]
        Sickness = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"Vacation")]
        Vacation = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"VacationBlock")]
        VacationBlock = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"Training")]
        Training = 11,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    [System.Flags]
	public enum WorkDayTypes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Monday")]
        Monday = 1 << 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Tuesday")]
        Tuesday = 1 << 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Wednesday")]
        Wednesday = 1 << 2,

        [System.Runtime.Serialization.EnumMember(Value = @"Thursday")]
        Thursday = 1 << 3,

        [System.Runtime.Serialization.EnumMember(Value = @"Friday")]
        Friday = 1 << 4,

        [System.Runtime.Serialization.EnumMember(Value = @"Saturday")]
        Saturday = 1 << 5,

        [System.Runtime.Serialization.EnumMember(Value = @"Sunday")]
        Sunday = 1 << 6,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    [System.Flags]
	public enum DocumentTypes
    {

        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Invoice")]
        Invoice = 1 << 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Eductation")]
        Eductation = 1 << 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Certificate")]
        Certificate = 1 << 2,

        [System.Runtime.Serialization.EnumMember(Value = @"Healthcare")]
        Healthcare = 1 << 3,

        [System.Runtime.Serialization.EnumMember(Value = @"Tax")]
        Tax = 1 << 4,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum AccountType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Checking")]
        Checking = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Savings")]
        Savings = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Community")]
        Community = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum CardType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Credit")]
        Credit = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Debit")]
        Debit = 1,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum RoleType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Administrator")]
        Administrator = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"User")]
        User = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"SuperUser")]
        SuperUser = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum PriorityLevelType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"None")]
        None = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Low")]
        Low = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Medium")]
        Medium = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"High")]
        High = 3,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record Created
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public Created()
        {
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record Deleted
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public Deleted()
        {
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record Updated
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public Updated()
        {
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial record ProblemDetails
    {
        [System.Text.Json.Serialization.JsonConstructor]
        public ProblemDetails(string @detail, string @instance, int? @status, string @title, string @type)
        {
            this.Type = @type;
            this.Title = @title;
            this.Status = @status;
            this.Detail = @detail;
            this.Instance = @instance;
        }

        [System.Text.Json.Serialization.JsonPropertyName("type")]
        public string Type { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("title")]
        public string Title { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("status")]
        public int? Status { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("detail")]
        public string Detail { get; init; }

        [System.Text.Json.Serialization.JsonPropertyName("instance")]
        public string Instance { get; init; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [System.Text.Json.Serialization.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    internal class DateFormatConverter : System.Text.Json.Serialization.JsonConverter<System.DateTimeOffset>
    {
        public override System.DateTimeOffset Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
        {
            var dateTime = reader.GetString();
            if (dateTime == null)
            {
                throw new System.Text.Json.JsonException("Unexpected JsonTokenType.Null");
            }

            return System.DateTimeOffset.Parse(dateTime);
        }

        public override void Write(System.Text.Json.Utf8JsonWriter writer, System.DateTimeOffset value, System.Text.Json.JsonSerializerOptions options)
        {
            writer.WriteStringValue(value.ToString("yyyy-MM-dd"));
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "14.6.0.0 (NJsonSchema v11.5.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class FileParameter
    {
        public FileParameter(System.IO.Stream data)
            : this (data, null, null)
        {
        }

        public FileParameter(System.IO.Stream data, string fileName)
            : this (data, fileName, null)
        {
        }

        public FileParameter(System.IO.Stream data, string fileName, string contentType)
        {
            Data = data;
            FileName = fileName;
            ContentType = contentType;
        }

        public System.IO.Stream Data { get; private set; }

        public string FileName { get; private set; }

        public string ContentType { get; private set; }
    }


}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore  649
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8600
#pragma warning restore 8602
#pragma warning restore 8603
#pragma warning restore 8604
#pragma warning restore 8625
#pragma warning restore 8765